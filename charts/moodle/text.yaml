---
# Source: moodle/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-mariadb
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.0.12
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: false
---
# Source: moodle/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-mariadb
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.0.12
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "R2V0S3JHNU5OQw=="
  mariadb-password: "YzdUVzZaR3RvUQ=="
---
# Source: moodle/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-moodle
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: moodle
    helm.sh/chart: moodle-14.1.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  moodle-password: "ZmlMRHdQUElFMg=="
---
# Source: moodle/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mariadb
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.0.12
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: moodle/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-moodle-moodle
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: moodle
    helm.sh/chart: moodle-14.1.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
  storageClassName: nfs-csi
---
# Source: moodle/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-mariadb
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.0.12
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: primary
---
# Source: moodle/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-moodle
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: moodle
    helm.sh/chart: moodle-14.1.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      targetPort: http
      nodePort: null
    - name: https
      port: 443
      targetPort: https
      nodePort: null
  selector:
    app.kubernetes.io/name: moodle
    app.kubernetes.io/instance: my-release
---
# Source: moodle/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-moodle
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: moodle
    helm.sh/chart: moodle-14.1.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: moodle
      app.kubernetes.io/instance: my-release
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: moodle
        helm.sh/chart: moodle-14.1.9
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
      annotations:
        prometheus.io/port: '9117'
        prometheus.io/scrape: "true"
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: moodle
                    app.kubernetes.io/instance: my-release
                namespaces:
                  - "hrachovec-ns"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      priorityClassName: ""
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "status.localhost"
      initContainers:
      containers:
        - name: my-release-moodle
          image: docker.io/bitnami/moodle:4.0.2-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: APACHE_HTTP_PORT_NUMBER
              value: "8080"
            - name: APACHE_HTTPS_PORT_NUMBER
              value: "8443"
            - name: MOODLE_DATABASE_TYPE
              value: "mariadb"
            - name: MOODLE_DATABASE_HOST
              value: "my-release-mariadb"
            - name: MOODLE_DATABASE_PORT_NUMBER
              value: "3306"
            - name: MOODLE_DATABASE_NAME
              value: "bitnami_moodle"
            - name: MOODLE_DATABASE_USER
              value: "bn_moodle"
            - name: MOODLE_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-mariadb
                  key: mariadb-password
            - name: MOODLE_SKIP_BOOTSTRAP
              value: "no"
            - name: MOODLE_USERNAME
              value: "user"
            - name: MOODLE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-moodle
                  key: moodle-password
            - name: MOODLE_EMAIL
              value: "user@example.com"
          envFrom:
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          livenessProbe:
            httpGet:
              path: /login/index.php
              port: http
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /login/index.php
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests:
              cpu: 300m
              memory: 512Mi
          volumeMounts:
            - name: moodle-data
              mountPath: /bitnami/moodle
              subPath: moodle
            - name: moodle-data
              mountPath: /bitnami/moodledata
              subPath: moodledata
      volumes:
        - name: moodle-data
          persistentVolumeClaim:
            claimName: my-release-moodle-moodle
---
# Source: moodle/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-mariadb
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.0.12
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: primary
  serviceName: my-release-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 5d58e820185aa2bda9f58c9104e7cafbb802a8af1efd1a6059e68ddf603aa558
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-11.0.12
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: my-release-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: primary
                namespaces:
                  - "hrachovec-ns"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.6.8-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "bn_moodle"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "bitnami_moodle"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: my-release-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        storageClassName: nfs-csi
---
# Source: moodle/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-moodle
  namespace: "hrachovec-ns"
  labels:
    app.kubernetes.io/name: moodle
    helm.sh/chart: moodle-14.1.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:
  rules:
    - host: moodle.dyn.cloud.e-infra.cz
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-release-moodle
                port:
                  name: http
  tls:
    - hosts:
        - moodle.dyn.cloud.e-infra.cz
      secretName: moodle.dyn.cloud.e-infra.cz-tls
    - hosts:
      - witcher.dyn.cloud.e-infra.cz
      secretName: witcher2a-dyn-cloud-e-infra-cz
