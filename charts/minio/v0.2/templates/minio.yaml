---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image }}
        imagePullPolicy: Always
        env:
        - name: MINIO_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: {{ .Release.Name }}-minioauth
        - name: MINIO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: {{ .Release.Name }}-minioauth
        - name: MINIO_BROWSER_REDIRECT_URL
{{- if eq .Values.global.cattle.clusterName "kubas-cluster" }}
          value: https://{{ .Release.Name }}-{{ .Release.Namespace }}.dyn.cloud.trusted.e-infra.cz
{{- else }}
          value: https://{{ .Release.Name }}-{{ .Release.Namespace }}.dyn.cloud.e-infra.cz
{{- end }}
        - name: MINIO_SERVER_URLs
{{- if eq .Values.global.cattle.clusterName "kubas-cluster" }}
          value: https://{{ .Release.Name }}-{{ .Release.Namespace }}.dyn.cloud.trusted.e-infra.cz
{{- else }}
          value: https://{{ .Release.Name }}-{{ .Release.Namespace }}.dyn.cloud.e-infra.cz
{{- end }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        resources:
          limits:
            cpu: 1
            memory: 1024Mi
        ports:
        - containerPort: 9000
        - containerPort: 8443
        volumeMounts:
        - name: vol-1
          mountPath: /data
      securityContext:
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: vol-1
        persistentVolumeClaim:
          claimName: {{ .Values.pvc }}
