apiVersion: apps/v1
kind: Deployment
metadata:
  name: scipion-master-{{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: scipion-master-{{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: scipion-master-{{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 180
      containers:

      - name: controller
        image: hub.cerit.io/josef_handl/scipion-controller:latest
        imagePullPolicy: Always
        securityContext:
          privileged: false
          runAsUser: 1000
          runAsGroup: 1000
        volumeMounts:
        - name: shared
          mountPath: "/mnt/shared"
        - name: scipion-od-dataset-ro
          mountPath: "/mnt/od-dataset"
        - name: scipion-od-project-rw
          mountPath: "/mnt/od-project"
        - name: scipion-vol-dataset-rw
          mountPath: "/mnt/vol-dataset"
        - name: scipion-vol-project-rw
          mountPath: "/mnt/vol-project"

      - name: scipion-master
        image: hub.cerit.io/josef_handl/scipion-master:latest
        imagePullPolicy: Always
        securityContext:
          privileged: false
          runAsUser: 1000
          runAsGroup: 1000
        ports:
        - containerPort: 5901
        - containerPort: 6001
        env:
        - name: INSTANCE_NAME
          value: {{ .Release.Name | quote }}
        - name: ROOT_PASS
          value: "abc"
        - name: USER_PASS
          value: "abc"
        - name: VNC_PASS
          value: {{ .Values.master.vncPassword | quote }}
        - name: USE_DISPLAY
          value: "1"
# USE_DISPLAY 1 is hardcoded in other files!
        - name: USE_VNCCLIENT
          value: {{ .Values.master.useVncClient | quote }}
        volumeMounts:
        - name: shared
          mountPath: "/mnt/shared"
{{ if .Values.master.useVncClient }}
        - name: cert-loadbalancer-vncclient
          mountPath: "/mnt/cert-loadbalancer-vncclient"
          readOnly: true
{{ end }}
        - name: scipion-vol-dataset-rw
          mountPath: "/mnt/vol-dataset"
        - name: scipion-vol-project-rw
          mountPath: "/mnt/vol-project"
        resources:
          limits:
            cpu: {{ .Values.instance.maxcpu }}
            memory: {{ .Values.instance.maxram }}
          requests:
            cpu: {{ .Values.instance.mincpu }}
            memory: {{ .Values.instance.minram }}
#            nvidia.com/gpu: 1 # dedicated GPU
#            cerit.io/gpu-mem: 1 # shared GPU

      serviceAccountName: pod-reader-sa-{{ .Release.Name }}
      volumes:

      # Shared volume between containers
      - name: shared
        emptyDir: {}

{{ if .Values.master.useVncClient }}
      # Certificate for VNC server
      - name: cert-loadbalancer-vncclient
        secret:
          secretName: scipion-{{ .Release.Name }}-{{ .Release.Namespace }}-dyn-cloud-e-infra-cz-tls
{{ end }}

      # Onedata
      # ---------------------

      # Controller cloner
      - name: scipion-od-dataset-ro
        persistentVolumeClaim:
          claimName: pvc-scipion-od-dataset-{{ .Release.Name }}-{{ .Release.Namespace }}
          readOnly: true

      # Controller restore,autosave,trapsave
      - name: scipion-od-project-rw
        persistentVolumeClaim:
          claimName: pvc-scipion-od-project-{{ .Release.Name }}-{{ .Release.Namespace }}

      # Auto vol provisioning
      # ---------------------

      # Master + Controller cloner (master - tmp)
      - name: scipion-vol-dataset-rw
        persistentVolumeClaim:
          claimName: pvc-scipion-vol-dataset-{{ .Release.Name }}-{{ .Release.Namespace }}-{{ .Values.od.dataset.spaceId }}

# TODO RO for RW PVC does not work
#      # Master
#      - name: scipion-vol-dataset-ro
#        persistentVolumeClaim:
#          claimName: pvc-scipion-vol-dataset-$SUBST_NAMESPACE
#          readOnly: true

      # Master + Controller restore,autosave,trapsave
      - name: scipion-vol-project-rw
        persistentVolumeClaim:
          claimName: pvc-scipion-vol-project-{{ .Release.Name }}-{{ .Release.Namespace }}-{{ .Values.od.project.spaceId }}

